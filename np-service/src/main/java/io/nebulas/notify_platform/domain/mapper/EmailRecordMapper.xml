<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nebulas.notify_platform.domain.mapper.EmailRecordMapper" >
  <resultMap id="BaseResultMap" type="io.nebulas.notify_platform.domain.model.EmailRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="is_success" property="isSuccess" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Condition_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Condition_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, receiver, sender, subject, content, created_at, is_success
  </sql>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="io.nebulas.notify_platform.domain.model.EmailRecordCondition" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from email_record
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitOffset >= 0" >
       limit ${limitOffset} , ${limitSize}
    </if>
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from email_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from email_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCondition" parameterType="io.nebulas.notify_platform.domain.model.EmailRecordCondition" >
    delete from email_record
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.nebulas.notify_platform.domain.model.EmailRecord" >
    insert into email_record (id, receiver, sender, 
      subject, content, created_at, 
      is_success)
    values (#{id,jdbcType=BIGINT}, #{receiver,jdbcType=VARCHAR}, #{sender,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{isSuccess,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="io.nebulas.notify_platform.domain.model.EmailRecord" >
    insert into email_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="isSuccess != null" >
        is_success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isSuccess != null" >
        #{isSuccess,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="io.nebulas.notify_platform.domain.model.EmailRecordCondition" resultType="java.lang.Integer" >
    select count(*) from email_record
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </select>
  <update id="updateByConditionSelective" parameterType="map" >
    update email_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSuccess != null" >
        is_success = #{record.isSuccess,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByCondition" parameterType="map" >
    update email_record
    set id = #{record.id,jdbcType=BIGINT},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      sender = #{record.sender,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      is_success = #{record.isSuccess,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByIdSelective" parameterType="io.nebulas.notify_platform.domain.model.EmailRecord" >
    update email_record
    <set >
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isSuccess != null" >
        is_success = #{isSuccess,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="io.nebulas.notify_platform.domain.model.EmailRecord" >
    update email_record
    set receiver = #{receiver,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      is_success = #{isSuccess,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>